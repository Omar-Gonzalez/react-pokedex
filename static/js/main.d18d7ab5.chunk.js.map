{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["Header","className","PokemonGrid","useState","pokemonList","setPokemonList","previous","setPrevious","next","setNext","resourceUrl","setResourceUrl","currentIndex","setCurrentIndex","fetchPokemonList","limit","offset","pageUrl","a","url","fetch","response","json","results","console","log","changePage","useEffect","onClick","parseInt","e","prevPokemon","href","length","nextPokemon","map","pokemon","index","PokemonDetail","prevUrl","setPrevUrl","name","setName","artwork","setArtwork","abilities","setAbilities","forms","setForms","baseExperience","setBaseExperience","moves","setMoves","locationAreas","setLocationAreas","sprites","setSprites","species","setSpecies","fetchResource","fetchLocations","warn","fetchSpecies","resource","base_experience","location_area_encounters","locations","speciesData","src","alt","ability","form","habitat","ExtendedDetails","move","location","location_area","PokemonTile","iconUrl","setIconUrl","fetchIconUrl","icon","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d18d7ab5.chunk.js","sourcesContent":["import './App.css';\nimport {Fragment, useState, useEffect} from \"react\";\n\nconst API_BASE_URL = \"https://pokeapi.co/api/v2/\";\n\nconst Header = () => {\n  return (\n    <div className={'header'}>\n      <h1>Pokedex</h1>\n      <p>A react based pokedex</p>\n    </div>\n  )\n}\n\nconst PokemonGrid = () => {\n  const [pokemonList, setPokemonList] = useState([]);\n  const [previous, setPrevious] = useState(null);\n  const [next, setNext] = useState(null);\n  const [resourceUrl, setResourceUrl] = useState(null);\n  const [currentIndex, setCurrentIndex] = useState(null);\n\n  const fetchPokemonList = async (limit, offset, pageUrl) => {\n    const url = pageUrl ? pageUrl : `${API_BASE_URL}pokemon?limit=${limit}&offset=${offset}`;\n    try {\n      const response = await fetch(url)\n      const {results, previous, next} = await response.json();\n      return {\n        results: results,\n        previous: previous,\n        next: next\n      }\n    } catch (e) {\n      console.log(e);\n      return {\n        results: [],\n        previous: null,\n        next: null\n      }\n    }\n  }\n\n  const nextPokemon = () => {\n    try {\n      setResourceUrl(pokemonList[parseInt(currentIndex) + 1]['url'])\n      setCurrentIndex(parseInt(currentIndex) + 1)\n    } catch (e) {\n      //disable next pokemon button\n    }\n  }\n  const prevPokemon = () => {\n    try {\n      setResourceUrl(pokemonList[parseInt(currentIndex) - 1]['url'])\n      setCurrentIndex(parseInt(currentIndex) - 1)\n    } catch (e) {\n      //disable prev pokemon button\n    }\n  }\n\n\n  const changePage = async (url) => {\n    const {results, previous, next} = await fetchPokemonList(null, null, url)\n    setPokemonList(results)\n    setPrevious(previous)\n    setNext(next)\n  }\n\n  useEffect(async () => {\n    const {results, previous, next} = await fetchPokemonList(40, 0);\n    setPokemonList(results)\n    setPrevious(previous)\n    setNext(next)\n  }, [])\n\n  return (\n    <Fragment>\n      {(() => {\n        if (resourceUrl) {\n          return <div className={'navbar'}>\n            {(() => {\n              return currentIndex >= 1 ?\n                <button onClick={() => prevPokemon()} href=\"\">&laquo; Previous Pokemon</button> : ''\n            })()}\n            {(() => {\n              return currentIndex < pokemonList.length - 1 ?\n                <button onClick={() => nextPokemon()} href=\"\">Next Pokemon &raquo;</button> : ''\n            })()}\n          </div>\n        }\n      })()}\n      <PokemonDetail resourceUrl={resourceUrl}></PokemonDetail>\n      <div className={'navbar'}>\n        {previous ? <button onClick={() => changePage(previous)} href=\"\">&laquo; Previous Page</button> : ''}\n        {next ? <button onClick={() => changePage(next)} href=\"\">Next Page &raquo;</button> : ''}\n      </div>\n      <div className={'pokemon-grid'}>\n        {\n          pokemonList.map((pokemon, index) => {\n            return <PokemonTile key={index} index={index} pokemon={pokemon} setResourceUrl={setResourceUrl}\n                                setCurrentIndex={setCurrentIndex}></PokemonTile>\n          })\n        }\n      </div>\n    </Fragment>\n  )\n}\n\nconst PokemonDetail = ({resourceUrl}) => {\n  const [prevUrl, setPrevUrl] = useState(null);\n  const [name, setName] = useState('');\n  const [artwork, setArtwork] = useState(null);\n  const [abilities, setAbilities] = useState([]);\n  const [forms, setForms] = useState([])\n  const [baseExperience, setBaseExperience] = useState('')\n  const [moves, setMoves] = useState([])\n  const [locationAreas, setLocationAreas] = useState([])\n  const [sprites, setSprites] = useState({})\n  const [species, setSpecies] = useState({\n    'habitat': {name: ''},\n    'flavor_text_entries': [{name: ''}]\n  })\n\n  const fetchResource = async (url) => {\n    if (url) {\n      const response = await fetch(url);\n      return await response.json();\n    } else {\n      return null\n    }\n  }\n\n  const fetchLocations = async (url) => {\n    try {\n      const response = await fetch(url);\n      return await response.json();\n    } catch (e) {\n      console.warn(e)\n      return []\n    }\n  }\n\n  const fetchSpecies = async (url) => {\n    try {\n      const response = await fetch(url);\n      return await response.json();\n    } catch (e) {\n      console.warn(e)\n      return {}\n    }\n  }\n\n  useEffect(() => {\n    if (resourceUrl !== prevUrl) {\n      (async () => {\n        const resource = await fetchResource(resourceUrl)\n        if (resource) {\n          //console.log(resource)\n          const {name, abilities, forms, sprites, base_experience, moves, location_area_encounters, species} = resource;\n          const artwork = sprites['other']['official-artwork']['front_default'] ? sprites['other']['official-artwork']['front_default'] : 'https://res.cloudinary.com/dlzzmbcfy/image/upload/v1543814600/placeholder_hmfbul.png';\n\n          const locations = await fetchLocations(location_area_encounters)\n          const speciesData = await fetchSpecies(species.url);\n\n          //Updated component data\n          setName(name)\n          setArtwork(artwork)\n          setAbilities(abilities)\n          setPrevUrl(resourceUrl)\n          setForms(forms)\n          setBaseExperience(base_experience)\n          setMoves(moves)\n          setLocationAreas(locations)\n          setSprites(sprites)\n          setSpecies(speciesData)\n        }\n      })();\n    }\n  })\n\n  return (\n    <Fragment>\n      {\n        resourceUrl ? <div className={'pokemon-detail'}>\n          <img className='artwork' src={artwork} alt=\"Pokemon Artwork\"/>\n          <h1>{name}</h1>\n          <hr/>\n          <div className='detail-container'>\n            <div className='detail-tile'>\n              <h2>Abilities</h2>\n              <ul>\n                {abilities.map((ability, index) => {\n                  return <li key={index}>{ability.ability.name}</li>\n                })}\n              </ul>\n              <h2>Forms</h2>\n              <ul>\n                {forms.map((form, index) => {\n                  return <li key={index}>{form.name}</li>\n                })}\n              </ul>\n              <h2>Base Experience</h2>\n              <ul>\n                <li>{baseExperience}</li>\n              </ul>\n            </div>\n            <div className='detail-tile'>\n              <h2>More Details</h2>\n              <img src={sprites['front_default'] ? sprites['front_default'] : sprites['font_shiny']}\n                   alt=\"Pokemon Front\"/>\n              <img src={sprites['back_default']}\n                   alt=\"Pokemon Back\"/>\n              <p>{species['flavor_text_entries'][0]['flavor_text']}</p>\n              <p>Habitat: <b>{species.habitat.name}</b>, Legendary: <b>{species['is_legendary'] ? 'Yes' : 'No'}</b>,\n                Mythical: <b>{species['is_mythical'] ? 'Yes' : 'No'}</b></p>\n            </div>\n          </div>\n        </div> : ''\n      }\n      <ExtendedDetails moves={moves} locations={locationAreas}></ExtendedDetails>\n    </Fragment>\n  )\n}\n\nconst ExtendedDetails = ({moves, locations}) => {\n  return (\n    <Fragment>\n      {(() => {\n        if (moves.length > 0 || locations.length > 0) {\n          return <div className='pokemon-detail'>\n            <h2 className='text-center'>Moves</h2>\n            <ul className={'long-list'}>\n              {moves.map((move, index) => {\n                return <li key={index}>{move.move.name}</li>\n              })}\n            </ul>\n            <h2 className='text-center'>Locations</h2>\n            <ul className={'long-list'}>\n              {locations.map((location, index) => {\n                return <li key={index}>{location.location_area.name}</li>\n              })}\n            </ul>\n          </div>\n        }\n      })()}\n    </Fragment>\n  )\n}\n\nconst PokemonTile = ({index, pokemon, setResourceUrl, setCurrentIndex}) => {\n  const [iconUrl, setIconUrl] = useState('https://res.cloudinary.com/dlzzmbcfy/image/upload/v1543814600/placeholder_hmfbul.png')\n\n  const fetchIconUrl = async (url) => {\n    const pokemon = await fetch(url);\n    const {sprites} = await pokemon.json();\n    try {\n      return sprites['front_default'];\n    } catch (e) {\n      console.warn(e)\n    }\n  }\n\n  useEffect(() => {\n    (async () => {\n      const icon = await fetchIconUrl(pokemon.url);\n      setIconUrl(icon)\n    })()\n  })\n\n  return (\n    <div onClick={() => (() => {\n      setResourceUrl(pokemon.url);\n      setCurrentIndex(index)\n    })()\n    } className={'pokemon-tile'}><img src={iconUrl}/>{pokemon.name}\n    </div>\n  )\n}\n\nconst App = () => {\n  return (\n    <Fragment>\n      <Header></Header>\n      <PokemonGrid></PokemonGrid>\n    </Fragment>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}